{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/composition.service.js","components/card.component.js","components/card-list.component.js","components/home.component.js","services/user-composition.service.js","services/onboarding.service.js","components/profile.component.js","services/auth-header.js","services/user.service.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","components/onboarding.component.js","services/favorites.service.js","components/card-details.component.js","services/chapter.service.js","components/chapter.component.js","components/add-chapter.component.js","components/user-fandoms.component.js","components/user-favorites.component.js","components/new-card.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","parse","email","removeItem","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","redirect","register","to","get","params","Card","onClick","composition","assign","height","width","image","CardList","content","map","Home","CompositionService","getAllCompositions","res","console","log","composition_name","delete","Profile","currentUser","userCompositions","getCurrentUser","UserCompositionService","getUserCompositions","getCurrentUsername","Button","authHeader","user","Authorization","headers","BoardUser","UserService","getUserBoard","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","Onboarding","checkedState","OnboardingService","getAllFandoms","Array","fill","fandom","index","FormCheck","checked","position","updatedCheckedState","item","handleOnChange","getCurrentUserEmail","key","list","i","fillUserFandomsByEmail","getCurrentPasswordSignup","compositionName","CardDetails","undefined","getCompositionByUsername","align","description","FandomService","addNewFavoriteByName","deleteComposition","Chapter","chapterName","chapterContent","ChapterService","getAllChaptersByCompositionName","chapter","AddChapter","setImage","url","setUrl","fandoms","id","padding","size","document","getElementById","createChapterByName","UserFandoms","userFandoms","getAllUserFandoms","UserFavorites","userFavorites","FavoritesService","getAllFavoritesByName","NewCard","handlePic","pic","files","formdata","FormData","append","r","createComposition","App","logOut","showModeratorBoard","showAdminBoard","roles","includes","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"wWAEMA,EAAU,aAqED,M,qFAlEX,SAAMC,EAAUC,GACZ,OAAOC,IACFC,KAAKJ,EAAU,SAAU,CACtBC,WACAC,aAEHG,MAAK,SAAAC,GAMF,OALIA,EAASC,KAAKC,cACdC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAASC,OACrDE,aAAaC,QAAQ,YAAaC,KAAKE,MAAMF,KAAKC,UAAUN,EAASC,KAAKO,SAC1EL,aAAaC,QAAQ,WAAYC,KAAKE,MAAMF,KAAKC,UAAUN,EAASC,KAAKN,aAEtEK,EAASC,U,oBAI5B,WACIE,aAAaM,WAAW,QACxBN,aAAaM,WAAW,aACxBN,aAAaM,WAAW,YACxBN,aAAaM,WAAW,c,sBAG5B,SAASd,EAAUa,EAAOZ,GACtB,OAAOC,IACFC,KAAKJ,EAAU,SAAU,CACtBC,WACAa,QACAZ,aAEHG,MAAK,SAAAC,GACFG,aAAaC,QAAQ,YAAaI,GAClCL,aAAaC,QAAQ,WAAYT,GACjCQ,aAAaC,QAAQ,eAAgBR,Q,4BAIjD,WACI,OAAOS,KAAKE,MAAMJ,aAAaO,QAAQ,W,iCAG3C,WACI,OAAOP,aAAaO,QAAQ,e,mCAGhC,WACI,OAAOP,aAAaO,QAAQ,e,sCAGhC,WACI,OAAOP,aAAaO,QAAQ,kB,sCAGhC,WACI,OAAOP,aAAaO,QAAQ,kB,gCAGhC,WACI,OAAOP,aAAaO,QAAQ,c,oCAGhC,WACI,OAAOP,aAAaO,QAAQ,gB,kEC5D9BC,EAAW,SAAAC,GACf,IAAKA,EACH,OACI,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOaC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACX1B,SAAU,GACVC,SAAU,GACV0B,SAAS,EACTC,QAAS,IAVM,E,oDAcnB,SAAiBC,GACfC,KAAKC,SAAS,CACZ/B,SAAU6B,EAAEG,OAAOf,U,8BAIvB,SAAiBY,GACfC,KAAKC,SAAS,CACZ9B,SAAU4B,EAAEG,OAAOf,U,yBAIvB,SAAYY,GAAI,IAAD,OACbA,EAAEI,iBAEFH,KAAKC,SAAS,CACZH,QAAS,GACTD,SAAS,IAGXG,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,OAChCC,EAAYC,MAAMX,KAAKJ,MAAM1B,SAAU8B,KAAKJ,MAAMzB,UAAUG,MACxD,WACE,EAAKiB,MAAMqB,QAAQC,KAAK,YACxBC,OAAOC,SAASC,YAElB,SAAAC,GACE,IAAMC,EACDD,EAAM1C,UACH0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACxBmB,EAAMnB,SACNmB,EAAME,WAEV,EAAKlB,SAAS,CACZJ,SAAS,EACTC,QAASoB,OAKjBlB,KAAKC,SAAS,CACZJ,SAAS,M,oBAKf,WAAU,IAAD,OACP,OACI,qBAAKT,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACIgC,IAAI,8CACJC,IAAI,cACJjC,UAAU,qBAGd,eAAC,IAAD,CACIkC,SAAUtB,KAAKR,YACf+B,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHlB,UAME,sBAAKpC,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACIC,KAAK,OACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAM1B,SAClB0D,SAAU5B,KAAKN,iBACfmC,YAAa,CAAC3C,QAIpB,sBAAKE,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACIC,KAAK,WACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAMzB,SAClByD,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC3C,QAIpB,qBAAKE,UAAU,aAAf,SACE,yBACIA,UAAU,4BACV0C,SAAU9B,KAAKJ,MAAMC,QAFzB,UAIGG,KAAKJ,MAAMC,SACR,sBAAMT,UAAU,qCAEpB,8CAIHY,KAAKJ,MAAME,SACR,qBAAKV,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBC,KAAK,QAAzC,SACGW,KAAKJ,MAAME,YAIpB,cAAC,IAAD,CACIiC,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GA9HDS,a,SCR7B/C,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOAN,EAAQ,SAAAI,GACZ,IAAK+C,kBAAQ/C,GACX,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,yCAOA8C,EAAY,SAAAhD,GAChB,GAAIA,EAAMsB,OAAS,GAAKtB,EAAMsB,OAAS,GACrC,OACE,qBAAKrB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOA+C,EAAY,SAAAjD,GAChB,GAAIA,EAAMsB,OAAS,GAAKtB,EAAMsB,OAAS,GACrC,OACE,qBAAKrB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOegD,E,kDACnB,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACD+C,eAAiB,EAAKA,eAAe7C,KAApB,gBACtB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAK8C,cAAgB,EAAKA,cAAc9C,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACX1B,SAAU,GACVa,MAAO,GACPZ,SAAU,GACVqE,YAAY,EACZC,UAAU,GAZK,E,oDAgBnB,SAAiB1C,GACfC,KAAKC,SAAS,CACZ/B,SAAU6B,EAAEG,OAAOf,U,2BAIvB,SAAcY,GACZC,KAAKC,SAAS,CACZlB,MAAOgB,EAAEG,OAAOf,U,8BAIpB,SAAiBY,GACfC,KAAKC,SAAS,CACZ9B,SAAU4B,EAAEG,OAAOf,U,4BAIvB,SAAeY,GAAI,IAAD,OAChBA,EAAEI,iBAEFH,KAAKC,SAAS,CACZwC,UAAU,IAGZzC,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,QAChCC,EAAYgC,SACV1C,KAAKJ,MAAM1B,SACX8B,KAAKJ,MAAMb,MACXiB,KAAKJ,MAAMzB,UACXG,MACE,WACE,EAAK2B,SAAS,CAAEwC,UAAU,S,oBAKpC,WAAU,IAAD,OAEP,OADqBzC,KAAKJ,MAAlB6C,SAEC,cAAC,IAAD,CAAUE,GAAG,gBAGpB,qBAAKvD,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACEgC,IAAI,8CACJC,IAAI,cACJjC,UAAU,qBAGZ,eAAC,IAAD,CACEkC,SAAUtB,KAAKsC,eACff,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHhB,WAMIxB,KAAKJ,MAAM4C,YACX,gCACE,sBAAKpD,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAM1B,SAClB0D,SAAU5B,KAAKN,iBACfmC,YAAa,CAAC3C,EAAUiD,QAI5B,sBAAK/C,UAAU,aAAf,UACE,uBAAOqC,QAAQ,QAAf,mBACA,cAAC,IAAD,CACEC,KAAK,OACLtC,UAAU,eACVuC,KAAK,QACLxC,MAAOa,KAAKJ,MAAMb,MAClB6C,SAAU5B,KAAKuC,cACfV,YAAa,CAAC3C,EAAUH,QAI5B,sBAAKK,UAAU,aAAf,UACE,uBAAOqC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLtC,UAAU,eACVuC,KAAK,WACLxC,MAAOa,KAAKJ,MAAMzB,SAClByD,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC3C,EAAUkD,QAI5B,qBAAKhD,UAAU,aAAf,SACE,wBAAQA,UAAU,4BAAlB,0BAKLY,KAAKJ,MAAME,SACV,qBAAKV,UAAU,aAAf,SACE,qBACEA,UACEY,KAAKJ,MAAM4C,WACP,sBACA,qBAENnD,KAAK,QANP,SAQGW,KAAKJ,MAAME,YAIlB,cAAC,IAAD,CACEiC,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GAzIMS,aC7BvB,M,kGAfX,WACI,OAAO7D,IAAMwE,IAAI3E,2B,mCAGrB,WACI,OAAOG,IAAMwE,IAAI3E,8B,sCAGrB,SAAyB0D,GACrB,OAAOvD,IAAMwE,IAAI3E,wBAAgB,CAC7B4E,OAAQ,CAAClB,KAAMA,S,MCZdmB,G,OAAO,SAACvD,GAAD,OAChB,sBAAKH,UAAU,iBAAiB2D,QAAS,WACrCrE,aAAaC,QAAQ,cAAeY,EAAMyD,YAAYrB,MACtDb,OAAOC,SAASkC,OAAO,sCAF3B,UAKI,qBAAK7D,UAAU,WAAW8D,OAAQ,IAAKC,MAAO,IAAK9B,IAAI,QAAQD,IAAK7B,EAAMyD,YAAYI,QACtF,oBAAIhE,UAAU,aAAd,SAA4BG,EAAMyD,YAAYrB,YCNzC0B,G,OAAW,SAAA9D,GAAK,OAC3B,qBAAKH,UAAU,YAAf,SACKG,EAAM+D,QAAQC,KAAI,SAAAP,GAAW,OAC1B,cAAC,EAAD,CAAMA,YAAaA,WCHRQ,E,kDACnB,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX0D,QAAS,IAJM,E,qDAQnB,WAAqB,IAAD,OACZA,EAAUG,EAAmBC,qBAAqBpF,MAAK,SAAAqF,GAC3D,EAAK1D,SAAS,CAACqD,QAASK,EAAInF,UAE9BoF,QAAQC,IAAIP,K,oBAGd,WACE,OACE,qBAAKlE,UAAU,YAAf,SACE,cAAC,EAAD,CAAUkE,QAAStD,KAAKJ,MAAM0D,gB,GAnBJrB,aCuBnB,M,mGAtBX,SAAoBN,GAChB,OAAOvD,IAAMwE,IAAI3E,6BAAiB,CAC9B4E,OAAQ,CAAClB,KAAMA,O,+BAIvB,SAAkBA,EAAMnD,GACpB,OAAOJ,IAAMC,KAAKJ,gCAAoBO,EAAM,CACxCqE,OAAQ,CAAClB,KAAMA,O,+BAIvB,SAAkBA,EAAMmC,GACpB,OAAO1F,IAAM2F,OAAO9F,gCAAoB,CACpC4E,OAAQ,CACJlB,KAAMA,EACNmC,iBAAkBA,S,MCCnB,M,6FAjBX,WACI,OAAO1F,IAAMwE,IAAI3E,sB,oCAGrB,SAAuBc,EAAOP,GAC1B,OAAOJ,IAAMC,KAAKJ,oBAAkBO,EAAM,CACtCqE,OAAQ,CAAC9D,MAAOA,O,+BAIxB,SAAkB4C,GACd,OAAOvD,IAAMwE,IAAI3E,wBAAsB,CACnC4E,OAAQ,CAAClB,KAAMA,S,wBCRNqC,E,kDACnB,WAAYzE,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX6C,SAAU,KACVwB,YAAa,CAAE/F,SAAU,IACzBgG,iBAAkB,IANH,E,qDAUnB,WAAqB,IAAD,OACZD,EAAcvD,EAAYyD,iBACPC,EAAuBC,oBAAoB3D,EAAY4D,sBAAsBhG,MAAK,SAAAqF,GACxG,EAAK1D,SAAS,CAACiE,iBAAkBP,EAAInF,UAGnCyF,GAAajE,KAAKC,SAAS,CAAEwC,SAAU,UAC5CzC,KAAKC,SAAS,CAAEgE,YAAaA,M,oBAG/B,WACE,GAAIjE,KAAKJ,MAAM6C,SACb,OAAO,cAAC,IAAD,CAAUE,GAAI3C,KAAKJ,MAAM6C,WAGlC,IAAQwB,EAAgBjE,KAAKJ,MAArBqE,YAER,OACE,qBAAK7E,UAAU,YAAf,SACE,gCACA,yBAAQA,UAAU,YAAlB,UACE,+BACE,iCAAS6E,EAAY/F,WADvB,iDAGA,uBACA,sBAAKkB,UAAU,YAAf,UACA,cAACmF,EAAA,EAAD,CAAQ7C,KAAK,SAASqB,QAAS,WAC7BjC,OAAOC,SAASkC,OAAO,sCADzB,yGAGA,cAACsB,EAAA,EAAD,CAAQxB,QAAS,WACfjC,OAAOC,SAASkC,OAAO,wCADzB,6FAKA,uBACA,sBAAK7D,UAAU,yBAAf,UACE,6BAAI,mIACJ,cAACmF,EAAA,EAAD,CAAQxB,QAAS,WACfjC,OAAOC,SAASkC,OAAO,kCADzB,kBAIF,cAAC,EAAD,CAAUK,QAAStD,KAAKJ,MAAMsE,4B,GApDHjC,aCTtB,SAASuC,IACpB,IAAMC,EAAO7F,KAAKE,MAAMJ,aAAaO,WAErC,OAAIwF,GAAQA,EAAKhG,YACR,CAAEiG,cAAe,UAAYD,EAAKhG,aAElC,GCHb,IAoBe,M,gGAjBb,WACE,OAAOL,IAAMwE,IAAI3E,mB,0BAGnB,WACE,OAAOG,IAAMwE,IAAI3E,iBAAkB,CAAE0G,QAASH,Q,+BAGhD,WACE,OAAOpG,IAAMwE,IAAI3E,gBAAiB,CAAE0G,QAASH,Q,2BAG/C,WACE,OAAOpG,IAAMwE,IAAI3E,kBAAmB,CAAE0G,QAASH,U,MCf9BI,E,kDACnB,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX0D,QAAS,IAJM,E,qDAQnB,WAAqB,IAAD,OAClBuB,EAAYC,eAAexG,MACzB,SAAAC,GACE,EAAK0B,SAAS,CACZqD,QAAS/E,EAASC,UAGtB,SAAAyC,GACE,EAAKhB,SAAS,CACZqD,QACGrC,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,kB,oBAMhB,WACE,OACE,qBAAK/B,UAAU,YAAf,SACE,wBAAQA,UAAU,YAAlB,SACE,6BAAKY,KAAKJ,MAAM0D,kB,GAjCarB,aCAlB8C,E,kDACnB,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX0D,QAAS,IAJM,E,qDAQnB,WAAqB,IAAD,OAClBuB,EAAYG,oBAAoB1G,MAC9B,SAAAC,GACE,EAAK0B,SAAS,CACZqD,QAAS/E,EAASC,UAGtB,SAAAyC,GACE,EAAKhB,SAAS,CACZqD,QACGrC,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,kB,oBAMhB,WACE,OACE,qBAAK/B,UAAU,YAAf,SACE,wBAAQA,UAAU,YAAlB,SACE,6BAAKY,KAAKJ,MAAM0D,kB,GAjCkBrB,aCAvBgD,E,kDACnB,WAAY1F,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX0D,QAAS,IAJM,E,qDAQnB,WAAqB,IAAD,OAClBuB,EAAYK,gBAAgB5G,MAC1B,SAAAC,GACE,EAAK0B,SAAS,CACZqD,QAAS/E,EAASC,UAGtB,SAAAyC,GACE,EAAKhB,SAAS,CACZqD,QACGrC,EAAM1C,UACL0C,EAAM1C,SAASC,MACfyC,EAAM1C,SAASC,KAAKsB,SACtBmB,EAAMnB,SACNmB,EAAME,kB,oBAMhB,WACE,OACE,qBAAK/B,UAAU,YAAf,SACE,wBAAQA,UAAU,YAAlB,SACE,6BAAKY,KAAKJ,MAAM0D,kB,GAjCcrB,a,SCGnBkD,E,kDACjB,WAAY5F,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTa,OAAQ,KACR6C,QAAS,GACT8B,aAAc,IANH,E,qDAWnB,WAAqB,IAAD,OACV9B,EAAU+B,EAAkBC,gBAAgBhH,MAAK,SAAAqF,GACnD,EAAK1D,SAAS,CAACqD,QAASK,EAAInF,OAC5B,EAAKyB,SAAS,EAAKL,MAAMwF,aAAe,IAAIG,MAAM5B,EAAInF,KAAKiC,QAAQ+E,MAAK,OAG5E5B,QAAQC,IAAIP,K,oBAIhB,WAAU,IAAD,OASL,OACI,sBAAKlE,UAAU,YAAf,UACI,wBAAQA,UAAU,YAAlB,SACI,+HAEHY,KAAKJ,MAAM0D,QAAQC,KAAI,SAACkC,EAAQC,GAAT,OACpB,sBAAKtG,UAAU,qBAAf,UACI,cAACuG,EAAA,EAAD,CAAWC,QAAS,EAAKhG,MAAMwF,aAAaM,GAAQ9D,SAAU,YAdvD,SAACiE,GACpB,IAAMC,EAAsB,EAAKlG,MAAMwF,aAAa7B,KAAI,SAACwC,EAAML,GAAP,OACpDA,IAAUG,GAAYE,EAAOA,KAEjC,EAAK9F,SAAS,EAAKL,MAAMwF,aAAeU,GAWxBE,CAAeN,GACf9B,QAAQC,IAAI,EAAKjE,MAAMwF,cACvBxB,QAAQC,IAAInD,EAAYuF,0BAE5B,qBAAK9C,MAAM,QAAQD,OAAO,QAAQ9B,IAAKqE,EAAOrC,QAC9C,6BAAKqC,EAAO9D,aAGpB,uBACA,cAAC4C,EAAA,EAAD,CAAQ7C,KAAK,SAASqB,QAAS,SAAAmD,GAE3B,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAI,EAAKxG,MAAM0D,QAAQ7C,OAAQ2F,KACR,IAA/B,EAAKxG,MAAMwF,aAAagB,IACxBD,EAAKtF,KAAK,EAAKjB,MAAM0D,QAAQ8C,IAIrCxC,QAAQC,IAAIsC,GACZd,EAAkBgB,uBAAuB3F,EAAYuF,sBAAuBE,GAAM7H,MAAK,SAAAqF,GAC/EC,QAAQC,IAAI,qBAGpBnD,EAAYC,MAAMD,EAAY4D,qBAAsB5D,EAAY4F,4BAA4BhI,MAAK,WAC7FwC,OAAOC,SAASkC,OAAO,kCAd/B,2B,GAhDwBhB,aCczB,M,oGAhBX,SAAqB/D,EAAUqI,GAC3B,OAAOnI,IAAMC,KAAKJ,qBAAiB,KAAM,CACrC4E,OAAQ,CACJ3E,SAAUA,EACVqI,gBAAiBA,O,mCAK7B,SAAsB5E,GAClB,OAAOvD,IAAMwE,IAAI3E,qBAAiB,CAC9B4E,OAAQ,CAAClB,KAAMA,S,MCTN6E,E,kDACjB,WAAYjH,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACT0D,QAAS,GACTW,iBAAawC,GALF,E,qDASnB,WAAqB,IAAD,OACVhC,EAAO/D,EAAYyD,iBACrBM,GACAzE,KAAKC,SAAS,CACVgE,YAAaQ,IAGrBhB,EAAmBiD,yBAAyBhI,aAAaO,QAAQ,gBAAgBX,MAAK,SAAAqF,GAClF,EAAK1D,SAAS,CAACqD,QAASK,EAAInF,Y,oBAIpC,WACI,IAAMiG,EAAOzE,KAAKJ,MAAMqE,YAExB,OACI,sBAAK7E,UAAU,sBAAf,UACI,6BAAKY,KAAKJ,MAAM0D,QAAQ3B,OACxB,qBAAKP,IAAKpB,KAAKJ,MAAM0D,QAAQF,MAAOD,MAAO,IAAKD,OAAQ,IAAKyD,MAAM,WACnE,uBACA,uBACA,mFACA,6BAAK3G,KAAKJ,MAAM0D,QAAQsD,cACxB,uBACA,sBAAKxH,UAAU,cAAf,UACI,cAACmF,EAAA,EAAD,CAAQ7C,KAAK,SAASqB,QAAS,WAC3BjC,OAAOC,SAASkC,OAAO,kCAD3B,kDAICwB,EACG,cAACF,EAAA,EAAD,CAAQxB,QAAS,WACb8D,EAAcC,qBAAqBpG,EAAY4D,qBAAsB5F,aAAaO,QAAQ,gBAAgBX,MAAK,SAAAqF,GAC3G7C,OAAOC,SAASkC,OAAO,kCAF/B,4HAMA,wBAEHwB,EAEG,cAACF,EAAA,EAAD,CAAQxB,QAAS,WACbqB,EAAuB2C,kBAAkBrG,EAAY4D,qBAAsB5F,aAAaO,QAAQ,gBAAgBX,MAAK,SAAAqF,GAEjH7C,OAAOC,SAASkC,OAAO,kCAH/B,iIAOA,kC,GAzDiBhB,aCLnChE,EAAU,6BAgBD,M,+GAbX,SAAgC0D,GAC5B,OAAOvD,IAAMwE,IAAI3E,EAAU,OAAQ,CAC/B4E,OAAQ,CAAClB,KAAMA,O,iCAIvB,SAAoBA,EAAMnD,GACtB,OAAOJ,IAAMC,KAAKJ,EAAU,UAAWO,EAAM,CACzCqE,OAAQ,CAAClB,KAAMA,S,MCTNqF,G,yDACjB,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACT0D,QAAS,GACT2D,YAAa,GACbC,eAAgB,IANL,E,qDAUnB,WAAqB,IAAD,OACIC,EAAeC,gCAAgC1I,aAAaO,QAAQ,gBAAgBX,MAAK,SAAAqF,GACzG,EAAK1D,SAAS,CAACqD,QAASK,EAAInF,OAC5B,EAAKyB,SAAS,CAACgH,YAAatD,EAAInF,KAAK,GAAGmD,OACxC,EAAK1B,SAAS,CAACiH,eAAgBvD,EAAInF,KAAK,GAAG8E,UAC3CM,QAAQC,IAAIF,EAAInF,W,oBAKxB,WAAU,IAAD,OACL,OACI,sBAAKY,UAAU,sBAAf,UACI,8BACKY,KAAKJ,MAAM0D,QAAQC,KAAI,SAAC8D,EAAS3B,GAAV,OACpB,qBAAKtG,UAAU,cAAf,SACI,6BACI,6BAAI,mBAAG2D,QAAS,WACZ,IAAK,IAAIqD,EAAI,EAAGA,EAAI,EAAKxG,MAAM0D,QAAQ7C,OAAQ2F,IAC3C,EAAKnG,SAAS,CAACgH,YAAa,EAAKrH,MAAM0D,QAAQoC,GAAO/D,OACtD,EAAK1B,SAAS,CAACiH,eAAgB,EAAKtH,MAAM0D,QAAQoC,GAAOpC,WAH7D,SAKAoC,EAAQ,OANPA,UAWrB,uBACA,uBACA,sBAAKtG,UAAU,YAAf,UACI,6BAAKY,KAAKJ,MAAMqH,cAChB,4BAAIjH,KAAKJ,MAAMsH,2B,GA1CEjF,cC8CtBqF,EA7Cf,kDAEI,WAAY/H,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTwD,MAAO,GACPmE,SAAU,GACVC,IAAK,GACLC,OAAQ,GACRC,QAAS,IARE,EAFvB,0CAgBI,WACI,OACI,sBAAKtI,UAAU,QAAf,UACI,6BAAI,uHACJ,uBACA,uBACA,uBACA,4JACA,uBAAOuI,GAAG,eAAejG,KAAK,OAAOK,MAAO,CAAC6F,QAAS,GAAIC,KAAK,OAC/D,uBACA,uBACA,0IACA,uBAAOF,GAAG,kBAAkBjG,KAAK,OAAOK,MAAO,CAAC6F,QAAS,KAAMC,KAAK,QACpE,cAACtD,EAAA,EAAD,CAAQxB,QAAS,WACb,IAAIY,EAAM,CACNhC,KAAMmG,SAASC,eAAe,gBAAgB5I,MAC9CmE,QAASwE,SAASC,eAAe,mBAAmB5I,OAExDgI,EAAea,oBAAoBtJ,aAAaO,QAAQ,eAAgBL,KAAKE,MAAMF,KAAKC,UAAU8E,KAAOrF,MAAK,SAAAqF,GAC1G7C,OAAOC,SAASkC,OAAO,qCAN/B,oGA7BhB,GAAgChB,aCCXgG,E,kDACjB,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTsI,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OACI7C,EAAkB8C,kBAAkBzH,EAAY4D,sBAAsBhG,MAAK,SAAAqF,GAC3F,EAAK1D,SAAS,CAACiI,YAAavE,EAAInF,Y,oBAIxC,WACI,OACI,sBAAKY,UAAU,YAAf,UACI,6HACCY,KAAKJ,MAAMsI,YAAY3E,KAAI,SAAAkC,GAAM,OAC9B,sBAAKrG,UAAU,YAAf,UACA,qBAAK+D,MAAM,QAAQD,OAAO,QAAQ9B,IAAKqE,EAAOrC,QAC9C,6BAAKqC,EAAO9D,aAGhB,uBACA,uBACA,cAAC4C,EAAA,EAAD,CAAQxB,QAAS,WACbjC,OAAOC,SAASkC,OAAO,qCAD3B,8I,GA3ByBhB,aCApBmG,G,kDACjB,WAAY7I,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTyI,cAAe,IAJJ,E,qDAQnB,WAAqB,IAAD,OACMC,EAAiBC,sBAAsB7H,EAAY4D,sBAAsBhG,MAAK,SAAAqF,GAChG,EAAK1D,SAAS,CAACoI,cAAe1E,EAAInF,Y,oBAI1C,WACI,OACI,sBAAKY,UAAU,YAAf,UACI,2GACA,cAAC,EAAD,CAAUkE,QAAStD,KAAKJ,MAAMyI,uB,GAnBHpG,a,qBCuCpC,IAqFQuG,GArFf,kDAEI,WAAYjJ,GAAQ,IAAD,8BACf,cAAMA,IAYVkJ,UAAY,SAAC1I,GACT,IAAM2I,EAAM3I,EAAEG,OAAOyI,MAAM,GAC3B/E,QAAQC,IAAI9D,EAAEG,OAAOyI,MAAM,IAC3B,EAAK1I,SAAS,CAACmD,MAAOsF,KAbtB,EAAK9I,MAAQ,CACTwD,MAAO,GACPmE,SAAU,GACVC,IAAK,GACLC,OAAQ,GACRC,QAAS,IARE,EAFvB,qDAqBI,WAAqB,IAAD,OACArC,EAAkBC,gBAAgBhH,MAAK,SAAAqF,GACnD,EAAK1D,SAAS,CAACyH,QAAS/D,EAAInF,YAvBxC,oBA8BI,WAAU,IAAD,OACL,OACI,sBAAKY,UAAU,QAAf,UACI,kFACA,uBAAOsC,KAAK,OAAOE,SAAU5B,KAAKyI,YAClC,uBACA,uBACA,sMACA,uBAAOd,GAAG,mBAAmBjG,KAAK,OAAOK,MAAO,CAAC6F,QAAS,GAAIC,KAAK,OACnE,uBACA,uBACA,sMACA,uBAAOF,GAAG,0BAA0BjG,KAAK,OAAOK,MAAO,CAAC6F,QAAS,IAAKC,KAAK,OAC3E,uBACA,uBACA,wBAAQA,KAAK,IAAIF,GAAG,SAApB,SACC3H,KAAKJ,MAAM8H,QAAQnE,KAAI,SAACkC,EAAQC,GAAT,OACpB,wBAAoBvG,MAAOsG,EAAO9D,KAAlC,SAAyC8D,EAAO9D,MAAnC+D,QAGhB,uBACD,uBACA,cAACnB,EAAA,EAAD,CAAQxB,QAAS,WACb,IAAM6F,EAAW,IAAIC,SAErBD,EAASE,OAAO,OAAQ,EAAKlJ,MAAMwD,OACnCwF,EAASE,OAAO,aAAc,aAC9BF,EAASE,OAAO,gBAAiB,YAEjC1K,IAAMC,KAAK,mDAAoDuK,GAAUtK,MAAK,SAAAyK,GAC1ErK,aAAaC,QAAQ,QAASoK,EAAEvK,KAAKgJ,QAGzC5D,QAAQC,IAAInF,aAAaO,QAAQ,UAEjC,IAAI0E,EAAM,CACNhC,KAAMmG,SAASC,eAAe,oBAAoB5I,MAClDyH,YAAakB,SAASC,eAAe,2BAA2B5I,MAChEiE,MAAO1E,aAAaO,QAAQ,SAC5BwG,OAAQqC,SAASC,eAAe,UAAU5I,OAG9CiF,EAAuB4E,kBAAkBtI,EAAY4D,qBAAsB1F,KAAKE,MAAMF,KAAKC,UAAU8E,KAAOrF,MAAK,SAAAyK,GAC7GrK,aAAaC,QAAQ,cAAemJ,SAASC,eAAe,oBAAoB5I,OAChF2B,OAAOC,SAASkC,OAAO,2CAtB/B,8IApDhB,GAA6BhB,aC8FdgH,G,kDApHb,WAAY1J,GAAQ,IAAD,8BACjB,cAAMA,IACD2J,OAAS,EAAKA,OAAOzJ,KAAZ,gBAEd,EAAKG,MAAQ,CACXuJ,oBAAoB,EACpBC,gBAAgB,EAChBnF,iBAAawC,GAPE,E,qDAWnB,WACE,IAAMhC,EAAO/D,EAAYyD,iBAErBM,GACFzE,KAAKC,SAAS,CACZgE,YAAaQ,EACb0E,mBAAoB1E,EAAK4E,MAAMC,SAAS,kBACxCF,eAAgB3E,EAAK4E,MAAMC,SAAS,kB,oBAK1C,WACE5I,EAAY6I,W,oBAGd,WACE,MAA4DvJ,KAAKJ,MAAzDqE,EAAR,EAAQA,YAAakF,EAArB,EAAqBA,mBAAoBC,EAAzC,EAAyCA,eAEzC,OACI,gCACE,sBAAKhK,UAAU,2CAAf,UACE,cAAC,IAAD,CAAMuD,GAAI,IAAKvD,UAAU,eAAzB,qBAGA,sBAAKA,UAAU,qBAAf,UAEG+J,GACG,oBAAI/J,UAAU,WAAd,SACE,cAAC,IAAD,CAAMuD,GAAI,OAAQvD,UAAU,WAA5B,+BAMLgK,GACG,oBAAIhK,UAAU,WAAd,SACE,cAAC,IAAD,CAAMuD,GAAI,SAAUvD,UAAU,WAA9B,2BAML6E,GACG,oBAAI7E,UAAU,WAAd,SACE,cAAC,IAAD,CAAMuD,GAAI,QAASvD,UAAU,WAA7B,uBAOP6E,EACG,sBAAK7E,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMuD,GAAI,WAAYvD,UAAU,WAAhC,SACG6E,EAAY/F,aAGjB,oBAAIkB,UAAU,WAAd,SACE,mBAAGoK,KAAK,SAASpK,UAAU,WAAW2D,QAAS/C,KAAKkJ,OAApD,yBAMJ,sBAAK9J,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMuD,GAAI,SAAUvD,UAAU,WAA9B,qBAKF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMuD,GAAI,YAAavD,UAAU,WAAjC,6BAQV,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqK,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,UAAWnG,IAC9C,cAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,SAASC,UAAWrK,IACtC,cAAC,IAAD,CAAOmK,OAAK,EAACC,KAAK,YAAYC,UAAWtH,IACzC,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,WAAWC,UAAW3F,IACxC,cAAC,IAAD,CAAO0F,KAAK,QAAQC,UAAW/E,IAC/B,cAAC,IAAD,CAAO8E,KAAK,OAAOC,UAAW5E,IAC9B,cAAC,IAAD,CAAO2E,KAAK,SAASC,UAAW1E,IAChC,cAAC,IAAD,CAAOyE,KAAK,cAAcC,UAAWxE,IACrC,cAAC,IAAD,CAAOuE,KAAK,eAAeC,UAAWnD,IACtC,cAAC,IAAD,CAAOkD,KAAK,WAAWC,UAAW3C,IAClC,cAAC,IAAD,CAAO0C,KAAK,eAAeC,UAAW1B,IACtC,cAAC,IAAD,CAAOyB,KAAK,iBAAiBC,UAAWvB,KACxC,cAAC,IAAD,CAAOsB,KAAK,WAAWC,UAAWnB,KAClC,cAAC,IAAD,CAAOkB,KAAK,iBAAiBC,UAAWrC,gB,GA7GpCrF,aCVE2H,QACa,cAA7B9I,OAAOC,SAAS8I,UAEe,UAA7B/I,OAAOC,SAAS8I,UAEhB/I,OAAOC,SAAS8I,SAASC,MACvB,2DCXRC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFlC,SAASC,eAAe,SDwHlB,kBAAmBkC,WACrBA,UAAUC,cAAcC,MACrB7L,MAAK,SAAA8L,GACJA,EAAaC,gBAEdC,OAAM,SAAArJ,GACL2C,QAAQ3C,MAAMA,EAAMnB,c","file":"static/js/main.ea536fc6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"/api/auth/\";\n\nclass AuthService {\n    login(username, password) {\n        return axios\n            .post(API_URL + \"signin\", {\n                username,\n                password\n            })\n            .then(response => {\n                if (response.data.accessToken) {\n                    localStorage.setItem('user', JSON.stringify(response.data));\n                    localStorage.setItem('userEmail', JSON.parse(JSON.stringify(response.data.email)))\n                    localStorage.setItem('username', JSON.parse(JSON.stringify(response.data.username)))\n                }\n                return response.data;\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem('userEmail')\n        localStorage.removeItem('username')\n        localStorage.removeItem('password')\n    }\n\n    register(username, email, password) {\n        return axios\n            .post(API_URL + \"signup\", {\n                username,\n                email,\n                password\n            })\n            .then(response => {\n                localStorage.setItem('userEmail', email)\n                localStorage.setItem('username', username)\n                localStorage.setItem('passwordSign', password)\n            });\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    getCurrentUserEmail() {\n        return localStorage.getItem('userEmail');\n    }\n\n    getCurrentEmailSignup() {\n        return localStorage.getItem('emailSign')\n    }\n\n    getCurrentUsernameSignup() {\n        return localStorage.getItem('usernameSign')\n    }\n\n    getCurrentPasswordSignup() {\n        return localStorage.getItem('passwordSign')\n    }\n\n    getCurrentUsername() {\n        return localStorage.getItem('username')\n    }\n\n    getCurrentUserPassword() {\n        return localStorage.getItem('password')\n    }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          This field is required!\n        </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n          () => {\n            this.props.history.push(\"/profile\");\n            window.location.reload();\n          },\n          error => {\n            const resMessage =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            this.setState({\n              loading: false,\n              message: resMessage\n            });\n          }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"col-md-12\">\n          <div className=\"card card-container\">\n            <img\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                alt=\"profile-img\"\n                className=\"profile-img-card\"\n            />\n\n            <Form\n                onSubmit={this.handleLogin}\n                ref={c => {\n                  this.form = c;\n                }}\n            >\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button\n                    className=\"btn btn-primary btn-block\"\n                    disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                      <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Login</span>\n                </button>\n              </div>\n\n              {this.state.message && (\n                  <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                      {this.state.message}\n                    </div>\n                  </div>\n              )}\n              <CheckButton\n                  style={{ display: \"none\" }}\n                  ref={c => {\n                    this.checkBtn = c;\n                  }}\n              />\n            </Form>\n          </div>\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\nimport {Redirect} from \"react-router-dom\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      redirect: false\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      redirect: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n          () => {\n            this.setState({ redirect: true})\n          });\n    }\n  }\n\n  render() {\n    const { redirect } = this.state;\n    if (redirect) {\n      return <Redirect to='/onboarding'/>;\n    }\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import axios from 'axios';\n\nconst API_URL = '/api/compositions/';\n\nclass CompositionService {\n    getAllCompositions() {\n        return axios.get(API_URL + 'all');\n    }\n\n    getSortedCompositions() {\n        return axios.get(API_URL + 'sorted');\n    }\n\n    getCompositionByUsername(name) {\n        return axios.get(API_URL + 'get',{\n            params: {name: name}\n        })\n    }\n}\n\nexport default new CompositionService();","import React from \"react\";\nimport './styles/card.styles.css'\n\nexport const Card = (props) => (\n    <div className='card-container' onClick={() => {\n        localStorage.setItem('composition', props.composition.name)\n        window.location.assign('http://localhost:8081/cardDetails')\n    }}>\n\n        <img className='card-img' height={220} width={150} alt=\"image\" src={props.composition.image}/>\n        <h4 className='card-title'>{props.composition.name}</h4>\n    </div>\n)","import React from \"react\";\nimport { Card } from './card.component'\nimport './styles/card-list.styles.css'\n\nexport const CardList = props => (\n  <div className='card-list'>\n      {props.content.map(composition => (\n          <Card composition={composition}/>\n      ))}\n  </div>\n);","import React, { Component } from \"react\";\nimport CompositionService from \"../services/composition.service\";\nimport {CardList} from \"./card-list.component\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: []\n    };\n  }\n\n  componentDidMount() {\n    const content = CompositionService.getAllCompositions().then(res => {\n      this.setState({content: res.data})\n    })\n    console.log(content)\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <CardList content={this.state.content} />\n      </div>\n    );\n  }\n}","import axios from 'axios';\n\nconst API_URL = '/api/user/compositions/';\n\nclass UserCompositionService {\n    getUserCompositions(name) {\n        return axios.get(API_URL + \"all\", {\n            params: {name: name}\n        });\n    }\n\n    createComposition(name, data) {\n        return axios.post(API_URL + 'create', data, {\n            params: {name: name}\n        })\n    }\n\n    deleteComposition(name, composition_name) {\n        return axios.delete(API_URL + 'delete', {\n            params: {\n                name: name,\n                composition_name: composition_name\n            }\n        })\n    }\n}\n\nexport default new UserCompositionService();","import axios from 'axios';\n\nconst API_URL = '/api/fandoms/';\n\nclass OnboardingService {\n    getAllFandoms() {\n        return axios.get(API_URL + 'all');\n    }\n\n    fillUserFandomsByEmail(email, data) {\n        return axios.post(API_URL + 'fill', data, {\n            params: {email: email}\n        })\n    }\n\n    getAllUserFandoms(name) {\n        return axios.get(API_URL + 'user/all', {\n            params: {name: name}\n        });\n    }\n}\n\nexport default new OnboardingService();\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport UserCompositionService from \"../services/user-composition.service\";\nimport OnboardingService from \"../services/onboarding.service\";\nimport './styles/profile.styles.css'\nimport {Button, FormCheck} from \"react-bootstrap\";\nimport {CardList} from \"./card-list.component\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      currentUser: { username: \"\" },\n      userCompositions: []\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const userCompositions = UserCompositionService.getUserCompositions(AuthService.getCurrentUsername()).then(res => {\n      {this.setState({userCompositions: res.data})}\n    })\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser})\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> профиль\n          </h3>\n          <br/>\n          <div className=\"container\">\n          <Button type=\"submit\" onClick={() => {\n            window.location.assign('http://localhost:8081/userFandoms')\n          }}>Мои предпочтения</Button>\n          <Button onClick={() => {\n            window.location.assign('http://localhost:8081/userFavorites')\n          }}>Мои избранные</Button>\n          </div>\n        </header>\n          <br/>\n          <div className=\"my_compositions_header\">\n            <h4><strong>Мои произведения</strong></h4>\n            <Button onClick={() => {\n              window.location.assign('http://localhost:8081/newCard')\n            }}>+</Button>\n          </div>\n          <CardList content={this.state.userCompositions} />\n      </div>\n      </div>\n    );\n  }\n}","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem());\n  \n    if (user && user.accessToken) {\n      return { Authorization: 'Bearer ' + user.accessToken };\n    } else {\n      return {};\n    }\n  }","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = '/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, {Component} from \"react\";\nimport OnboardingService from \"../services/onboarding.service\";\nimport AuthService from \"../services/auth.service\"\nimport {Button, FormCheck} from \"react-bootstrap\";\nimport Home from \"./home.component\";\nimport {Route} from \"react-router-dom\";\n\nexport default class Onboarding extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            length: null,\n            content: [],\n            checkedState: []\n\n        };\n    }\n\n    componentDidMount() {\n        const content = OnboardingService.getAllFandoms().then(res => {\n            this.setState({content: res.data})\n            this.setState(this.state.checkedState = new Array(res.data.length).fill(false))\n\n        })\n        console.log(content)\n    }\n\n\n    render() {\n\n        const handleOnChange = (position) => {\n            const updatedCheckedState = this.state.checkedState.map((item, index) =>\n                index === position ? !item : item\n            )\n            this.setState(this.state.checkedState = updatedCheckedState)\n        }\n\n        return (\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h2>Выберите фэндомы</h2>\n                </header>\n                {this.state.content.map((fandom, index) => (\n                    <div className=\"toppings-list-item\">\n                        <FormCheck checked={this.state.checkedState[index]} onChange={() => {\n                            handleOnChange(index)\n                            console.log(this.state.checkedState)\n                            console.log(AuthService.getCurrentUserEmail())\n                        }}/>\n                        <img width=\"450px\" height=\"200px\" src={fandom.image}/>\n                        <h4>{fandom.name}</h4>\n                    </div>\n                ))}\n                <br/>\n                <Button type=\"submit\" onClick={key => {\n                    let list = [];\n                    for (let i = 0; i < this.state.content.length; i++) {\n                        if (this.state.checkedState[i] === true) {\n                            list.push(this.state.content[i]);\n                        }\n                    }\n\n                    console.log(list)\n                    OnboardingService.fillUserFandomsByEmail(AuthService.getCurrentUserEmail(), list).then(res => {\n                            console.log(\"Filled fandoms\")\n                        }\n                    )\n                    AuthService.login(AuthService.getCurrentUsername(), AuthService.getCurrentPasswordSignup()).then(() => {\n                        window.location.assign('http://localhost:8081/home')\n                    })\n                }\n                }>Submit</Button>\n            </div>\n        );\n    }\n};","import axios from 'axios';\n\nconst API_URL = '/api/favorites/';\n\nclass FavoritesService {\n    addNewFavoriteByName(username, compositionName) {\n        return axios.post(API_URL + \"add\", null, {\n            params: {\n                username: username,\n                compositionName: compositionName\n            }\n        });\n    }\n\n    getAllFavoritesByName(name) {\n        return axios.get(API_URL + \"all\", {\n            params: {name: name}\n        });\n    }\n}\n\nexport default new FavoritesService();","import React, {Component} from \"react\";\nimport CompositionService from \"../services/composition.service\";\nimport FandomService from \"../services/favorites.service\";\nimport {Button} from \"react-bootstrap\";\nimport AuthService from \"../services/auth.service\";\nimport UserCompositionService from \"../services/user-composition.service\";\n\nexport default class CardDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: [],\n            currentUser: undefined\n        };\n    }\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n            this.setState({\n                currentUser: user\n            });\n        }\n        CompositionService.getCompositionByUsername(localStorage.getItem('composition')).then(res => {\n            this.setState({content: res.data})\n        })\n    }\n\n    render() {\n        const user = this.state.currentUser;\n\n        return (\n            <div className=\"container jumbotron\">\n                <h2>{this.state.content.name}</h2>\n                <img src={this.state.content.image} width={350} height={350} align=\"center\"/>\n                <br/>\n                <br/>\n                <h4>Описание:</h4>\n                <h5>{this.state.content.description}</h5>\n                <br/>\n                <div className=\"list-inline\">\n                    <Button type=\"submit\" onClick={() => {\n                        window.location.assign('http://localhost:8081/chapter')\n                    }}>Читать</Button>\n\n                    {user ? (\n                        <Button onClick={() => {\n                            FandomService.addNewFavoriteByName(AuthService.getCurrentUsername(), localStorage.getItem('composition')).then(res => {\n                                window.location.assign('http://localhost:8081/home')\n                            })\n                        }}>Добавить в избранное</Button>\n                    ) : (\n                        <div></div>\n                    )}\n                    {user ? (\n\n                        <Button onClick={() => {\n                            UserCompositionService.deleteComposition(AuthService.getCurrentUsername(), localStorage.getItem('composition')).then(res => {\n\n                                window.location.assign('http://localhost:8081/home')\n                            })\n                        }}>Удалить произведение</Button>\n                    ) : (\n                        <div></div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n};","import axios from 'axios';\n\nconst API_URL = '/api/compositions/chapters';\n\nclass ChapterService {\n    getAllChaptersByCompositionName(name) {\n        return axios.get(API_URL + \"/all\", {\n            params: {name: name}\n        });\n    }\n\n    createChapterByName(name, data) {\n        return axios.post(API_URL + '/create', data, {\n            params: {name: name}\n        })\n    }\n}\n\nexport default new ChapterService();","import React, {Component} from \"react\";\nimport ChapterService from \"../services/chapter.service\";\nimport './styles/chapter.styles.css'\n\nexport default class Chapter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: [],\n            chapterName: \"\",\n            chapterContent: \"\"\n        };\n    }\n\n    componentDidMount() {\n        const getChapters = ChapterService.getAllChaptersByCompositionName(localStorage.getItem(\"composition\")).then(res => {\n            this.setState({content: res.data})\n            this.setState({chapterName: res.data[0].name})\n            this.setState({chapterContent: res.data[0].content})\n            console.log(res.data)\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"container jumbotron\">\n                <div>\n                    {this.state.content.map((chapter, index) => (\n                        <div className=\"inline-list\">\n                            <ul key={index}>\n                                <li><a onClick={() => {\n                                    for (let i = 0; i < this.state.content.length; i++) {\n                                        this.setState({chapterName: this.state.content[index].name})\n                                        this.setState({chapterContent: this.state.content[index].content})\n                                    }\n                                }}>{index + 1}</a></li>\n                            </ul>\n                        </div>\n                    ))}\n                </div>\n                <br/>\n                <br/>\n                <div className=\"container\">\n                    <h3>{this.state.chapterName}</h3>\n                    <p>{this.state.chapterContent}</p>\n                </div>\n            </div>\n        );\n    }\n};","import React, {Component, useCallback, useState} from 'react';\nimport {Button, FormCheck} from \"react-bootstrap\";\nimport ChapterService from \"../services/chapter.service\";\n\n\nexport class AddChapter extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image: \"\",\n            setImage: \"\",\n            url: \"\",\n            setUrl: \"\",\n            fandoms: []\n        };\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"input\">\n                <h1><strong>Создание главы</strong></h1>\n                <br/>\n                <br/>\n                <br/>\n                <h4>Введите название главы</h4>\n                <input id=\"chapter_name\" type=\"text\" style={{padding: 6}} size=\"50\"/>\n                <br/>\n                <br/>\n                <h4>Введите текст главы</h4>\n                <input id=\"chapter_content\" type=\"text\" style={{padding: 100}} size=\"100\"/>\n                <Button onClick={() => {\n                    let res = {\n                        name: document.getElementById(\"chapter_name\").value,\n                        content: document.getElementById(\"chapter_content\").value\n                    }\n                    ChapterService.createChapterByName(localStorage.getItem('composition'), JSON.parse(JSON.stringify(res))).then(res => {\n                        window.location.assign('http://localhost:8081/chapter')\n                    })\n                }\n                }>Добавить главу</Button>\n\n            </div>\n        );\n    }\n}\n\nexport default AddChapter;","import React, {Component} from \"react\";\nimport OnboardingService from \"../services/onboarding.service\";\nimport AuthService from \"../services/auth.service\";\nimport './styles/profile.styles.css'\nimport {Button} from \"react-bootstrap\";\n\nexport default class UserFandoms extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userFandoms: []\n        };\n    }\n\n    componentDidMount() {\n        const userFandoms = OnboardingService.getAllUserFandoms(AuthService.getCurrentUsername()).then(res => {\n            this.setState({userFandoms: res.data})\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Мои предпочтения</h2>\n                {this.state.userFandoms.map(fandom => (\n                    <div className=\"container\">\n                    <img width=\"450px\" height=\"200px\" src={fandom.image}/>\n                    <h4>{fandom.name}</h4>\n                    </div>\n                    ))}\n                <br/>\n                <br/>\n                <Button onClick={() => {\n                    window.location.assign('http://localhost:8081/onboarding')\n                }\n                }>Поменять предпочтения</Button>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport FavoritesService from \"../services/favorites.service\";\nimport AuthService from \"../services/auth.service\";\nimport './styles/profile.styles.css'\nimport {CardList} from \"./card-list.component\";\n\nexport default class UserFavorites extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userFavorites: []\n        };\n    }\n\n    componentDidMount() {\n        const userFavorites = FavoritesService.getAllFavoritesByName(AuthService.getCurrentUsername()).then(res => {\n            this.setState({userFavorites: res.data})\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Мои избранные</h2>\n                <CardList content={this.state.userFavorites} />\n            </div>\n        );\n    }\n}","import React, {Component, useCallback, useState} from 'react';\nimport {Button, FormCheck} from \"react-bootstrap\";\nimport OnboardingService from \"../services/onboarding.service\";\nimport UserCompositionService from \"../services/user-composition.service\";\nimport AuthService from \"../services/auth.service\";\nimport {useDropzone} from \"react-dropzone\";\nimport axios from \"axios\";\n\nfunction ImageDrop() {\n    const [files, setFiles] = useState([])\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: \"image/*\",\n        onDrop: (acceptedFiles) => {\n            setFiles(\n                acceptedFiles.map((file) =>\n                        Object.assign(file, {\n                            preview: URL.createObjectURL(file),\n                        })\n                )\n            )\n        }\n    })\n\n    const images = files.map((file) => (\n        <div key={file.name}>\n            <div>\n                <img id=\"image\" src={file.preview} style={{width: \"200px\", height: \"200px\"}} alt=\"preview\"/>\n            </div>\n        </div>\n    ))\n\n    return (\n        <div>\n            <div {...getRootProps()}>\n                <input {...getInputProps()}/>\n                <div>Drag image</div>\n            </div>\n            <div>{images}</div>\n        </div>\n    )\n}\n\n\n\nexport class NewCard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            image: \"\",\n            setImage: \"\",\n            url: \"\",\n            setUrl: \"\",\n            fandoms: []\n        };\n    }\n\n\n    handlePic = (e) => {\n        const pic = e.target.files[0];\n        console.log(e.target.files[0])\n        this.setState({image: pic})\n    }\n\n    componentDidMount() {\n        const fandoms = OnboardingService.getAllFandoms().then(res => {\n            this.setState({fandoms: res.data})\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div className=\"input\">\n                <h4>Картинка</h4>\n                <input type=\"file\" onChange={this.handlePic}/>\n                <br/>\n                <br/>\n                <h4>Введите название произведения</h4>\n                <input id=\"composition_name\" type=\"text\" style={{padding: 6}} size=\"50\"/>\n                <br/>\n                <br/>\n                <h4>Введите описание произведения</h4>\n                <input id=\"composition_description\" type=\"text\" style={{padding: 30}} size=\"70\"/>\n                <br/>\n                <br/>\n                <select size=\"1\" id=\"select\">\n                {this.state.fandoms.map((fandom, index )=> (\n                    <option key={index} value={fandom.name}>{fandom.name}</option>\n                ))}\n                </select>\n                 <br/>\n                <br/>\n                <Button onClick={() => {\n                    const formdata = new FormData();\n\n                    formdata.append(\"file\", this.state.image);\n                    formdata.append(\"cloud_name\", \"dnwbktk0z\");\n                    formdata.append(\"upload_preset\", \"fp9a0chb\");\n\n                    axios.post(\"https://api.cloudinary.com/v1_1/dnwbktk0z/upload\", formdata).then(r => {\n                        localStorage.setItem('image', r.data.url)\n                    });\n\n                    console.log(localStorage.getItem('image'))\n\n                    let res = {\n                        name: document.getElementById(\"composition_name\").value,\n                        description: document.getElementById(\"composition_description\").value,\n                        image: localStorage.getItem('image'),\n                        fandom: document.getElementById(\"select\").value\n                    }\n\n                    UserCompositionService.createComposition(AuthService.getCurrentUsername(), JSON.parse(JSON.stringify(res))).then(r => {\n                        localStorage.setItem('composition', document.getElementById(\"composition_name\").value)\n                        window.location.assign('http://localhost:8081/createChapter')\n\n                    })\n                }\n                }>Добавить произведение</Button>\n\n            </div>\n        );\n    }\n}\n\nexport default NewCard;","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport 'react-app-polyfill/stable'\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport Onboarding from \"./components/onboarding.component\";\nimport CardDetails from \"./components/card-details.component\"\nimport Chapter from \"./components/chapter.component\";\nimport AddChapter from \"./components/add-chapter.component\";\nimport UserFandoms from \"./components/user-fandoms.component\";\nimport UserFavorites from \"./components/user-favorites.component\";\nimport NewCard from \"./components/new-card.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\")\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              Fanfics\n            </Link>\n            <div className=\"navbar-nav mr-auto\">\n\n              {showModeratorBoard && (\n                  <li className=\"nav-item\">\n                    <Link to={\"/mod\"} className=\"nav-link\">\n                      Moderator Board\n                    </Link>\n                  </li>\n              )}\n\n              {showAdminBoard && (\n                  <li className=\"nav-item\">\n                    <Link to={\"/admin\"} className=\"nav-link\">\n                      Admin Board\n                    </Link>\n                  </li>\n              )}\n\n              {currentUser && (\n                  <li className=\"nav-item\">\n                    <Link to={\"/user\"} className=\"nav-link\">\n                      User\n                    </Link>\n                  </li>\n              )}\n            </div>\n\n            {currentUser ? (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/profile\"} className=\"nav-link\">\n                      {currentUser.username}\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                      LogOut\n                    </a>\n                  </li>\n                </div>\n            ) : (\n                <div className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/login\"} className=\"nav-link\">\n                      Login\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to={\"/register\"} className=\"nav-link\">\n                      Sign Up\n                    </Link>\n                  </li>\n                </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/user\" component={BoardUser} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n              <Route path=\"/onboarding\" component={Onboarding} />\n              <Route path=\"/cardDetails\" component={CardDetails} />\n              <Route path=\"/chapter\" component={Chapter}/>\n              <Route path=\"/userFandoms\" component={UserFandoms} />\n              <Route path=\"/userFavorites\" component={UserFavorites} />\n              <Route path=\"/newCard\" component={NewCard} />\n              <Route path=\"/createChapter\" component={AddChapter} />\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}